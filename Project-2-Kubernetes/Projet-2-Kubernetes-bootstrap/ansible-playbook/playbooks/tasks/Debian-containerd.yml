---
- name: Capture dpkg architecture
  command: dpkg --print-architecture
  register: dpkg_architecture
    
# Architecture Debian example amd64
- name: Get DEB architecture
  shell: dpkg --print-architecture
  register: deb_architecture

- name: Create directory for apt keyrings
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/{{ ansible_distribution |Â lower }}/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Deploy Docker source list
  template:
    src: docker.list.j2
    dest: /etc/apt/sources.list.d/docker.list
    owner: root
    group: root
    mode: 744

- name: apt update
  apt:
    update_cache: yes
    upgrade: 'no'
  when: ansible_os_family == 'Debian'

- name: Install containerd
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - containerd.io
  when: ansible_os_family == 'Debian'

- name: Execute containerd config command and save output to file
  ansible.builtin.command: "containerd config default"
  register: containerd_config_output

- name: Save containerd config output to file
  ansible.builtin.copy:
    content: "{{ containerd_config_output.stdout }}"
    dest: /etc/containerd/config.toml

- name: Enable modprobe br_netfilter
  ansible.builtin.command: "modprobe br_netfilter"

- name: Replace SystemdCgroup 
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '            SystemdCgroup = false'
    line: '            SystemdCgroup = true'

- name: sandbox_image
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'sandbox_image = '
    line: '    sandbox_image = "registry.k8s.io/pause:3.10"'

- name: Restart containerd
  systemd:
      name: containerd
      state: restarted